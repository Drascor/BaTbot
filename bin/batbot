#!/bin/bash

# BaTbot versión actual
VERSION="1.4.3.4\nBot de Telegram en Bash traducido por uGeek"
# Fork de 1.4.3.4 - uGeekPodcast

# Directorio de usuarios (Ruta donde está nuestra carpeta .batbot en nuestro servidor, Raspberry,...)
BATBOTUSR="$HOME/.batbot"

BATBOTDIR="$(readlink -f "${BASH_SOURCE%/*}")"

# Ingrese el token BOT devuelto por BotFather
TELEGRAMTOKEN="$(cat "${BATBOTUSR}/telegramtoken")"

# Ingrese el ID de usuario maestro para notificaciones de uso
PERSONALID="$(cat "${BATBOTUSR}/personalid")"

API_URL="https://api.telegram.org/bot${TELEGRAMTOKEN}"

# cree el archivo allowed_users especificando las ID de los usuarios autorizados para enviar los comandos. Una identificación por línea
ALLOWEDUSER="${BATBOTUSR}/allowed_users"

# revisar nuevos mensajes cada X segundos:
CHECKNEWMSG=5

MAX_SECONDS_OLD=20

# change keyboard
# curl -s -d "text=keyboard&chat_id=$ID&reply_markup={\"keyboard\":[[{\"text\":\"/help\"}]],\"resize_keyboard\":true,\"one_time_keyboard\":true}" "${API_URL}/sendMessage" && echo

# Comandos
# respete este formato: ["/ mi comando"] = '<comando del sistema>'
# Por favor, recuerde eliminar los ejemplos innecesarios
# Para agregar estos comandos a los comandos personalizados,
# usa la función / setcommands en BotFather

declare -A BOTCOMMANDS=(
    ["/start"]="exec ${BATBOTDIR}/userlist @USERID:@FIRSTNAME@LASTNAME"
    ["/myid"]='echo @USERID'
    ["/myuser"]='echo @USERNAME'
    ["/uptime"]="uptime"
    # ["/ping ([a-zA-Z0-9]+)"]='echo Pong: @R1'
    # ["/add ([0-9]+)"]='exec admadduser @USERID @R1'
    # ["/del ([0-9]+)"]='exec admdeluser @USERID @R1'
    # ["/lista"]='exec admlistuser @USERID'
    # ["/run (.*)"]="exec @R1"
    # ["/docker_nginx_start"]="docker stop nginx"
    # ["/docker_nginx_stop"]="docker start nginx"
    ["/ip"]='curl -A firefox -s https://www.ignaciocano.com/ip'
    ["/puppeteer"]="echo $USER"
    ["/tr_add_kw (.*)"]="add-torrent-by-keywords.sh @R1"
    ["/tr_add_hash (.*)"]="add-torrent-by-hash.sh @R1"
    ["/tr_add_magnet (.*)"]="add-torrent-by-magnet.sh @R1"
    ["/tr_status"]="service transmission-daemon status"
    ["/tr_start"]="service transmission-daemon start"
    ["/tr_stop"]="service transmission-daemon stop"
    ["/help"]='echo -e
        Commands available: \n
        /ip                 \n
        /myid               \n
        /myuser             \n
        /puppeteer          \n
        /tr_add_kw          \n
        /tr_add_hash        \n
        /tr_add_magnet      \n
        /tr_start           \n
        /tr_stop            \n
        /tr_status          \n
        /uptime             \n
    '
)

FIRSTTIME=0

echo -e "\nBaTbot v${VERSION}\n"
ABOUTME=$(curl -s "${API_URL}/getMe")
if [[ "${ABOUTME}" =~ \"ok\":true\, ]]; then
    if [[ "${ABOUTME}" =~ \"username\":\"([^\"]+)\" ]]; then
        echo -e "Nick del BOT:\t @${BASH_REMATCH[1]}"
    fi

    if [[ "${ABOUTME}" =~ \"first_name\":\"([^\"]+)\" ]]; then
        echo -e "Nombre del Bot:\t ${BASH_REMATCH[1]}"
    fi

    if [[ "${ABOUTME}" =~ \"id\":([0-9\-]+), ]]; then
        echo -e "Bot ID:\t\t ${BASH_REMATCH[1]}"
        BOTID=${BASH_REMATCH[1]}
    fi

    echo -e "Directorio del Bot:\t ${BATBOTDIR}"

else
    echo "Error: tal vez el token este equivocado ... saliendo"
    exit
fi

# last bot message file
LASTMSGFILE="${BATBOTUSR}/${BOTID}.lastmsg"

if [ -e "${LASTMSGFILE}" ]; then
    FIRSTTIME=0
else
    touch "${LASTMSGFILE}"
    FIRSTTIME=1
fi

echo -e "\nIniciando... Esperando un nuevo mensaje\n"

while true; do
    MSGOUTPUT=$(curl -s "${API_URL}/getUpdates")
    MSGID=0
    TEXT=0
    FIRSTNAME=""
    LASTNAME=""
    echo -e "${MSGOUTPUT}" | while read -r line ; do
        if [[ "$line" =~ \"chat\":\{\"id\":([\-0-9]+)\, ]]; then
            CHATID=${BASH_REMATCH[1]}
        fi

        if [[ "$line" =~ \"message_id\":([0-9]+)\, ]]; then
            MSGID=${BASH_REMATCH[1]}
        fi

        if [[ "$line" =~ \"text\":\"([^\"]+)\" ]]; then
            TEXT=${BASH_REMATCH[1]}
        fi

        if [[ "$line" =~ \"username\":\"([^\"]+)\" ]]; then
            USERNAME=${BASH_REMATCH[1]}
        fi

        if [[ "$line" =~ \"first_name\":\"([^\"]+)\" ]]; then
            FIRSTNAME=${BASH_REMATCH[1]}
        fi

        if [[ "$line" =~ \"last_name\":\"([^\"]+)\" ]]; then
            LASTNAME=${BASH_REMATCH[1]}
        fi

        if [[ "$line" =~ \"from\":\{\"id\":([0-9\-]+), ]]; then
            FROMID="${BASH_REMATCH[1]}"
        fi

        if [[ "$line" =~ \"date\":([0-9]+)\, ]]; then
            DATE=${BASH_REMATCH[1]}
        fi

        if [[ $MSGID -ne 0 && $CHATID -ne 0 ]]; then
            ### comprobar si el usuario está autorizado
            USERALLOWED=$(grep -cx "${FROMID}" "$ALLOWEDUSER")
            LASTMSGDATE=$(cat "${LASTMSGFILE}")
            FIRSTNAMEUTF8=$(echo -e "$FIRSTNAME")
            if [[ $DATE -gt $LASTMSGDATE ]]; then
                if grep -qe "$(echo "${TEXT}" | awk '{print $1}')" <(echo "${!BOTCOMMANDS[@]}"); then
                    echo "[chat ${CHATID}][de ${FROMID}] <${FIRSTNAMEUTF8} ${LASTNAME}> ${TEXT}"
                    echo "$DATE" > "${LASTMSGFILE}"
                    for s in "${!BOTCOMMANDS[@]}"; do
                        if [[ "${TEXT}" =~ ${s} ]]; then
                            DATENOW=$(date "+%s")
                            DATEDIFF=$(( DATENOW - DATE ))
                            CMDORIG=${BOTCOMMANDS["$s"]}
                            CMDORIG=${CMDORIG//@USERID/$FROMID}
                            CMDORIG=${CMDORIG//@USERNAME/$USERNAME}
                            CMDORIG=${CMDORIG//@FIRSTNAME/$FIRSTNAMEUTF8}
                            CMDORIG=${CMDORIG//@LASTNAME/$LASTNAME}
                            CMDORIG=${CMDORIG//@CHATID/$CHATID}
                            CMDORIG=${CMDORIG//@MSGID/$MSGID}
                            CMDORIG=${CMDORIG//@TEXT/${TEXT}}
                            CMDORIG=${CMDORIG//@FROMID/$FROMID}
                            CMDORIG=${CMDORIG//@R1/${BASH_REMATCH[1]}}
                            CMDORIG=${CMDORIG//@R2/${BASH_REMATCH[2]}}
                            CMDORIG=${CMDORIG//@R3/${BASH_REMATCH[3]}}

                            if [[ ${USERALLOWED} -eq 1 ]]; then
                                if [[ ${FIRSTTIME} -eq 1 || ${DATEDIFF} -gt $MAX_SECONDS_OLD ]]; then
                                    echo "Mensaje antiguo, no hay respuesta del usuario"
                                    curl -s -d "text=Mensaje antiguo&chat_id=${PERSONALID}" "${API_URL}/sendMessage" -o /dev/null
                                else
                                    echo "Comando ${s} recibido, ejecuto: ${CMDORIG}"
                                    CMDOUTPUT=$($CMDORIG)
                                    curl -s -d "text=${CMDOUTPUT}&chat_id=${CHATID}" "${API_URL}/sendMessage" -o /dev/null
                                    if [[ "$FROMID" != "$PERSONALID" ]]; then
                                        curl -s -d "text=${s} recibido de ${FIRSTNAMEUTF8} ${LASTNAME} ${FROMID}&chat_id=${PERSONALID}" "${API_URL}/sendMessage" -o /dev/null
                                    fi
                                fi
                            else
                                CMDOUTPUT="BOT Privado. No estas autorizado a utilizarlo! tu ID es: ${FROMID}, Comunicate con el administrador para que te habilite."
                                echo "Tu nombre no está en la lista: ${s} recibido por ${FIRSTNAMEUTF8} ${FROMID}"
                                curl -s -d "text=${CMDOUTPUT}&chat_id=${CHATID}" "${API_URL}/sendMessage" -o /dev/null
                                if [[ ${FROMID} != "${PERSONALID}" ]]; then
                                    curl -s -d "text=Usuario no habilitado: ${s} recibido de ${FIRSTNAMEUTF8} ${FROMID}&chat_id=${PERSONALID}" "${API_URL}/sendMessage" -o /dev/null
                                fi
                                if [[ ${s} == "/start" ]]; then
                                    "${BATBOTDIR}/userlist" "${FROMID}:${FIRSTNAMEUTF8}${LASTNAME}"
                                fi
                            fi

                        fi
                    done
                else
                    echo "$DATE" > "${LASTMSGFILE}"
                    if [[ ${USERALLOWED} -eq 1 ]]; then
                        echo "Comando ${TEXT} no reconocido"
                        curl -s -d "text=Comando ${TEXT} no reconocido.&chat_id=${CHATID}" "${API_URL}/sendMessage" -o /dev/null
                        if [[ ${FROMID} != "${PERSONALID}" ]]; then
                            curl -s -d "text=${TEXT} no reconocido recibido de ${FROMID} ${FIRSTNAMEUTF8} ${LASTNAME}&chat_id=${PERSONALID}" "${API_URL}/sendMessage" -o /dev/null
                        fi
                    else
                        CMDOUTPUT="¡No estás autorizado para ejecutar este comando!"
                        echo "Comando no habilitado : ${s} recibido de ${FROMID} ${FIRSTNAMEUTF8}"
                        curl -s -d "text=${CMDOUTPUT}&chat_id=${CHATID}" "${API_URL}/sendMessage" -o /dev/null
                        if [[ ${FROMID} != "${PERSONALID}" ]]; then
                            curl -s -d "text=Comando no habilitado: ${s} recibido de ${FROMID} ${FIRSTNAMEUTF8} ${LASTNAME}&chat_id=${PERSONALID}" "${API_URL}/sendMessage" -o /dev/null
                        fi
                    fi
                fi
            fi
        fi
    done

    FIRSTTIME=0

    read -rt ${CHECKNEWMSG} answer
    if [[ "$answer" =~ ^\.msg.([\-0-9]+).(.*) ]]; then
        CHATID=${BASH_REMATCH[1]}
        MSGSEND=${BASH_REMATCH[2]}
        curl -s -d "text=${MSGSEND}&chat_id=${CHATID}" "${API_URL}/sendMessage" -o /dev/null
    elif [[ "$answer" =~ ^\.msg.([a-zA-Z]+).(.*) ]]; then
        CHATID=${BASH_REMATCH[1]}
        MSGSEND=${BASH_REMATCH[2]}
        curl -s -d "text=${MSGSEND}&chat_id=@${CHATID}" "${API_URL}/sendMessage" -o /dev/null
    fi

done

exit 0
